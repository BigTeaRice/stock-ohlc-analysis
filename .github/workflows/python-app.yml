# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytestname: Generate OHLC Chart  # 工作流名稱

on:  # 觸發條件（此處設定 push 到 main 分支時觸發）
  push:
    branches: [ "main" ]

jobs:  # 定義任務
  generate-chart:
    runs-on: ubuntu-latest  # 使用 Ubuntu 虛擬機器

    steps:  # 執行步驟
      - name: Checkout code  # 拉取倉庫代碼
        uses: actions/checkout@v4

      - name: Set up Python  # 安裝 Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"  # 選擇 Python 版本

      - name: Install dependencies  # 安裝依賴
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run script  # 執行主程式
        run: |
          python main.py  # 假設主程式檔名為 main.py

      - name: Upload chart artifact  # 上傳生成的圖表（可選）
        if: success()  # 僅當任務成功時上傳
        uses: actions/upload-artifact@v4
        with:
          name: ohlc-chart
          path: ./ohlc_chart.html  # 圖表輸出路徑
