# ------------------------------
# GitHub Actions 工作流程：股票数据分析
# ------------------------------
name: Stock Data Analysis Pipeline

# 触发条件：推送代码到 main 分支时执行
on:
  push:
    branches: [ "main" ]

# 定义作業：在 Ubuntu 最新环境中运行
jobs:
  analyze-and-upload:
    runs-on: ubuntu-latest
    # 定义工件名称变量（动态，基于运行ID）
    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.artifact-name }}

    steps:
      # ------------------------------
      # 步骤1：檢出倉庫代碼
      # ------------------------------
      - name: Checkout Repository Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ------------------------------
      # 步骤2：设置 Python 环境
      # ------------------------------
      - name: Set Up Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ------------------------------
      # 步骤3：安装项目依赖
      # ------------------------------
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ------------------------------
      # 步骤4：运行主分析脚本
      # ------------------------------
      - name: Run Main Script
        id: run-main
        run: |
          python main.py

      # ------------------------------
      # 步骤5：设置工件名称（动态）
      # ------------------------------
      - name: Set Artifact Name
        id: set-artifact-name
        run: |
          echo "artifact-name=stock-analysis-${{ github.run_id }}" >> $GITHUB_OUTPUT

      # ------------------------------
      # 步骤6：上传分析结果（工件）
      # ------------------------------
      - name: Upload Results as Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.artifact-name }}  # 使用动态名称
          path: |
            ohlc_chart.html
            data/*.csv
          retention-days: 7
          if-no-files-found: error

  download-and-verify:
    runs-on: ubuntu-latest
    # 依赖 analyze-and-upload 作业完成
    needs: analyze-and-upload
    steps:
      # ------------------------------
      # 步骤1：获取上传的工件名称
      # ------------------------------
      - name: Get Uploaded Artifact Name
        id: get-artifact-name
        run: |
          echo "artifact-name=${{ needs.analyze-and-upload.outputs.artifact-name }}" >> $GITHUB_OUTPUT

      # ------------------------------
      # 步骤2：下载工件
      # ------------------------------
      - name: Download Generated Files
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.get-artifact-name.outputs.artifact-name }}  # 与上传名称一致
          path: ./downloaded-results

      # ------------------------------
      # 步骤3：验证下载的文件
      # ------------------------------
      - name: Verify Downloaded Files
        run: |
          echo "✅ 下载的工件包含以下文件："
          ls -l ./downloaded-results
          echo "📊 检查 ohlc_chart.html 是否存在："
          test -f ./downloaded-results/ohlc_chart.html && echo "存在" || echo "不存在"
